Views.ClimateVulnerability = {
  layers: {
    "heat": [
      "impervious_surface",
      "extreme_heat_tract"
    ],
    "drought": [
      "landuse2005_ag",
      "vernal_pools"
    ],
    "flooding": [
      "nfhl",
      "nfhl_roads",
      "nfhl_parcels"
    ]
  },
  add_layers: (map, town, feature) => {
    var cp = Views.ControlPanel;
    var already_active_layers = _.pluck(Views.ControlPanel.get("layers.active"), "layer_default_id");
    Controllers.Layers.hide_all_layers(cp, {});


    // Add the layers we're interested in
    let associated_layers = Views.ClimateVulnerability.layers[feature];
    Controllers.Layers.force_layers_active(cp, associated_layers);

    // Remove the old VAW towns
    Controllers.Layers.remove_active(cp, {context: {id: "vaw_towns"}});
    // Add the new VAW towns layer
    let new_layer = Controllers.Layers.add_custom_layer(cp, {"id": 'vaw_towns',
                                              "name": town + " Boundary "},
                                              {
                                                "town": town
                                              });

    // Zoom To Town...
    setTimeout(function () {
      Controllers.Search.execute_search(town + ", MA, USA", (sstr, data) => {
        Views.ControlPanel.fire('zoom-to-search-result', {}, {'context': data.results[0]});
      });
    }, 500);

    // Open the report Panel
    cp.set("climate_vulnerability.show_report", {"town": town, "hazard": feature});
    // Resize / invalidate size of the map (to center it correctly)
    setTimeout(function(){ map.invalidateSize()}, 0);

  }
};
